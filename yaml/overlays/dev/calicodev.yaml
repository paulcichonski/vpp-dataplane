---
kind: DaemonSet
apiVersion: apps/v1
metadata:
  name: calico-vpp-node
  namespace: kube-system
  labels:
    k8s-app: calico-vpp-node
spec:
  selector:
    matchLabels:
      k8s-app: calico-vpp-node
  updateStrategy:
    type: RollingUpdate
    rollingUpdate:
      maxUnavailable: 1
  template:
    spec:
      initContainers:
        - name: install-cni
          image: ${CALICO_CNI_IMAGE}
          imagePullPolicy: IfNotPresent
        - name: flexvol-driver
          image: calico/pod2daemon-flexvol:${CALICO_VERSION_TAG}
      containers:
        - name: calico-node
          image: ${CALICO_NODE_IMAGE}
          imagePullPolicy: ${IMAGE_PULL_POLICY}
          envFrom:
          - configMapRef:
              name: calico-node-dev-config
          env:
            - name: DATASTORE_TYPE
              value: "kubernetes"
            - name: WAIT_FOR_DATASTORE
              value: "true"
            - name: NODENAME
              value: ""
              valueFrom:
                fieldRef:
                  fieldPath: spec.nodeName
            - name: CALICO_NETWORKING_BACKEND
              value: vpp
            - name: CALICO_BGP_LOGSEVERITYSCREEN
              value: info
            - name: CLUSTER_TYPE
              value: "k8s,bgp"
            - name: CALICO_ROUTER_ID
              value: "hash"
            - name: FELIX_IPINIPMTU
              value: ""
              valueFrom:
                configMapKeyRef:
                  name: calico-config
                  key: veth_mtu
            - name: CALICO_DISABLE_FILE_LOGGING
              value: "true"
            - name: FELIX_DEFAULTENDPOINTTOHOSTACTION
              value: "ACCEPT"
            - name: FELIX_LOGSEVERITYSCREEN
              value: "info"
            - name: FELIX_HEALTHENABLED
              value: "true"
        - name: vpp
          image: ${CALICO_VPP_IMAGE}
          imagePullPolicy: ${IMAGE_PULL_POLICY}
          envFrom:
          - configMapRef:
              name: vpp-dev-config
          env:
            - name: CALICOVPP_IP_CONFIG
              value: linux
            - name: DATASTORE_TYPE
              value: "kubernetes"
            - name: WAIT_FOR_DATASTORE
              value: "true"
            - name: NODENAME
              valueFrom:
                fieldRef:
                  fieldPath: spec.nodeName
            - name: LD_LIBRARY_PATH
              value: "/home/hostuser/vpp/build-root/install-vpp-native/vpp/"
          resources:
            requests:
              cpu: 1
              memory: 4Gi
            limits:
              memory: 80Gi
              hugepages-2Mi: 4G
          volumeMounts:
            # Add your home to the container we can launch rebulid vpp
            # without the whole container
            - name: userhome
              mountPath: /home/hostuser
      volumes:
        - name: userhome
          hostPath:
            path: ${USERHOME}
